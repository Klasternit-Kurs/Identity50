@page "/fu"
@using grpcServisi
@using Grpc.Core
@using System.IO
@inject grpcServisi.GrpcIdentity.GrpcIdentityClient kli

<InputFile OnChange="Foo" multiple>Uppppload</InputFile>
<button @onclick="Down">Download</button>

@foreach (var sl in _slike)
{
	<img src="@sl"/>
}

@code
{
	private int _bajtiSlanje = 1000;

	private async void Down()
	{
		Console.WriteLine("Krece metoda");
		var dwn = kli.Download(new EmptyMsg());
		List<byte> bajtovi = new List<byte>();
		string tip = string.Empty;
		await foreach (var ch in dwn.ResponseStream.ReadAllAsync())
		{
			ch.Bajt.ToList().ForEach(b => bajtovi.Add((byte)b));
			tip = ch.Tip;
		}

		_slike.Add($"data:{tip};base64,{Convert.ToBase64String(bajtovi.ToArray())}");
		StateHasChanged();
		/*while (await dwn.ResponseStream.MoveNext())
		{
			Console.WriteLine(dwn.ResponseStream.Current);
		}*/
	}

	public List<string> _slike = new List<string>();
	private async void Foo(InputFileChangeEventArgs a)
	{

		foreach (IBrowserFile slika in a.GetMultipleFiles(5))
		{
			var resize = await slika.RequestImageFileAsync("image/jpeg", 500, 500);
			byte[] nizBajta = new byte[resize.Size];
			await resize.OpenReadStream().ReadAsync(nizBajta);


			FajlMsg fajl = new FajlMsg();
			fajl.Naziv = slika.Name;
			fajl.Tip = slika.ContentType;
			using (var grpcStream = kli.Upload())
			{
				for (int i = 0; i < nizBajta.Length; i++)
				{
					fajl.Bajt.Add(nizBajta[i]);
					if ((i + 1) % (_bajtiSlanje) == 0)
					{
						await grpcStream.RequestStream.WriteAsync(fajl);
						fajl = new FajlMsg();
						fajl.Naziv = slika.Name;
						fajl.Tip = slika.ContentType;
					}
				}

				if (fajl.Bajt.Any())
					await grpcStream.RequestStream.WriteAsync(fajl);
				await grpcStream.RequestStream.CompleteAsync();
				await grpcStream.ResponseAsync;

			}

		}

	}
}
